      - name: Sync remote data (from local → remote)
        run: |
          echo "::group::Sync to remote server"

          sudo apt-get update && sudo apt-get install -y lftp

          BRANCH="${GITHUB_REF##*/}"
          echo "Detected branch: $BRANCH"

          if [[ "$BRANCH" == "main" ]]; then
            echo "Environment: production"
            HOST="${{ secrets.PROD_HOST }}"
            USER="${{ secrets.PROD_USER }}"
            PASS="${{ secrets.PROD_PASSWORD }}"
            REMOTE_PATH="${{ secrets.PROD_REMOTE_PATH }}"
            if [[ -n "${{ secrets.PROD_SFTP }}" ]]; then
              PROTOCOL="sftp"
              PORT="${{ secrets.PROD_SFTP }}"
            else
              PROTOCOL="ftp"
              PORT="21"
            fi
          elif [[ "$BRANCH" == "stage" ]]; then
            echo "Environment: staging"
            HOST="${{ secrets.STAGE_HOST }}"
            USER="${{ secrets.STAGE_USER }}"
            PASS="${{ secrets.STAGE_PASSWORD }}"
            REMOTE_PATH="${{ secrets.STAGE_REMOTE_PATH }}"
            if [[ -n "${{ secrets.STAGE_SFTP }}" ]]; then
              PROTOCOL="sftp"
              PORT="${{ secrets.STAGE_SFTP }}"
            else
              PROTOCOL="ftp"
              PORT="21"
            fi
          else
            echo "❌ Unsupported branch: $BRANCH"
            exit 1
          fi

          echo "Testing $PROTOCOL connection to $HOST:$PORT …"

          lftp -u "$USER","$PASS" -p "$PORT" "$PROTOCOL://$HOST" -e "ls $REMOTE_PATH; exit" || {
            echo "❌ Verbindung fehlgeschlagen. Prüfe Zugangsdaten und Port."
            exit 1
          }

          echo "✅ Verbindung erfolgreich."

          # Nur maintenance.php hochladen, wenn sie existiert
          if [ -f ".github/workflows/maintenance.php" ]; then
            echo "::group::Activate maintenance mode (upload maintenance.php → index.php)"
            lftp -u "$USER","$PASS" -p "$PORT" "$PROTOCOL://$HOST" -e "
              set ftp:ssl-allow true;
              set ftp:ssl-force true;
              set ftp:ssl-protect-data true;
              set ftp:ssl-protect-list true;
              set sftp:auto-confirm yes;
              set xfer:clobber true;

              cd $REMOTE_PATH/public;
              put .github/workflows/maintenance.php -o index.php;

              bye
            "
            echo "::endgroup::"
          else
            echo "⚠️ Keine maintenance.php gefunden – Maintenance-Modus wird übersprungen."
          fi

          echo "::group::Start mirror upload (ohne public/index.php)"
          lftp -u "$USER","$PASS" -p "$PORT" "$PROTOCOL://$HOST" -e "
            set ftp:ssl-allow true;
            set ftp:ssl-force true;
            set ftp:ssl-protect-data true;
            set ftp:ssl-protect-list true;
            set xfer:clobber true;

            mirror --reverse \
                   --delete \
                   --only-newer \
                   --no-perms \
                   --no-umask \
                   --verbose \
                   -x '^node_modules$' \
                   -x '^node_modules/.*$' \
                   -x '^.*/node_modules$' \
                   -x '^.*/node_modules/.*$' \
                   -x '^.ddev$' \
                   -x '^.ddev/.*$' \
                   -x '^.*/.ddev$' \
                   -x '^.*/.ddev/.*$' \
                   -x '^data$' \
                   -x '^data/.*$' \
                   -x '^.*/data$' \
                   -x '^.git$' \
                   -x '^.git/.*$' \
                   -x '^.github$' \
                   -x '^.github/.*$' \
                   -x '^public/index\.php$' \
                   -x '^.*/public/index\.php$' \
                   ./ $REMOTE_PATH;

            bye
          "
          echo "::endgroup::"

          echo "::group::Upload final index.php"
          if [ -f "public/index.php" ]; then
            lftp -u "$USER","$PASS" -p "$PORT" "$PROTOCOL://$HOST" -e "
              set ftp:ssl-allow true;
              set ftp:ssl-force true;
              set ftp:ssl-protect-data true;
              set ftp:ssl-protect-list true;
              set sftp:auto-confirm yes;
              set xfer:clobber true;

              cd $REMOTE_PATH/public;
              put public/index.php;

              bye
            "
          else
            echo "⚠️ public/index.php nicht gefunden – kein finaler Upload."
          fi
          echo "::endgroup::"
